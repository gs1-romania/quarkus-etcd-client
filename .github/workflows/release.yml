name: Release

on:
  workflow_dispatch:
    inputs:
      branch:
        description: "The branch to checkout when cutting the release."
        required: true
        default: "master"
      releaseVersion:
        description: "Default version to use when preparing a release."
        required: true
        default: "X.Y.Z"
      developmentVersion:
        description: "Default version to use for new local working copy."
        required: true
        default: "X.Y.Z-SNAPSHOT"

jobs:
  release:
    runs-on: ubuntu-latest
    name: release

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
          server-id: github
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }} # Value of the GPG private key to import
          gpg-passphrase: GPG_PASSPHRASE # env variable for GPG private key passphrase
          
      - name: Configure Git author
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Maven release
        run: |
          git checkout -b release-${{ github.event.inputs.releaseVersion }}
          git fetch --tags
          mvn -B release:prepare -Prelease -Pgithub -DreleaseVersion=${{ github.event.inputs.releaseVersion }} -DdevelopmentVersion=${{ github.event.inputs.developmentVersion }}
          git checkout ${{ github.base_ref }}
          git rebase release-${{ github.event.inputs.releaseVersion }}
          mvn -B release:perform -Darguments=-DperformRelease -DperformRelease -Prelease -Pgithub
        env:
          GITHUB_TOKEN: ${{ github.token }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

      - name: Push changes to ${{ github.base_ref }}
        uses: ad-m/github-push-action@v0.6.0
        with:
          github_token: ${{ github.token }}
          branch: ${{ github.base_ref }}

      - name: Push tags
        uses: ad-m/github-push-action@v0.6.0
        with:
          github_token: ${{ github.token }}
          tags: true
          branch: ${{ github.base_ref }}
